{"sample_order": 20, "function": "def modify_features(df_input) -> pd.DataFrame:\n    \"\"\"\n    Thought 1: The absolute difference between Left-Weight and Right-Weight can capture the imbalance in weight distribution.\n    New Feature 1: weight_difference | weight_difference = abs(Left-Weight - Right-Weight)\n    \"\"\"\n    import pandas as pd\n    import numpy as np\n    \"\"\"\n    This function adds three new features to the input DataFrame: \n    weight_difference, distance_ratio, weight_distance_diff, left_heavier, right_heavier.\n    \n    These features capture the imbalance in weight distribution, the proximity of each side to the fulcrum, and the dominant side's influence on balance.\n    \n    Parameters\n    ----------\n    df_input : pd.DataFrame\n        The input DataFrame containing the features.\n    \n    Returns\n    -------\n    pd.DataFrame\n        The modified DataFrame with new features added.\n    \"\"\"\n    import pandas as pd\n    \n    # Calculate absolute difference between Left-Weight and Right-Weight\n    df_output = df_input.copy()\n    df_output['weight_difference'] = abs(df_output['Left-Weight'] - df_output['Right-Weight'])\n    \n    # Calculate the ratio of Left-Distance to Right-Distance, handling division by zero\n    df_output['distance_ratio'] = (df_output['Left-Distance'] / df_output['Right-Distance']).fillna(float('inf'))\n    \n    # Calculate the difference between Left-Weight and Right-Distance\n    df_output['weight_distance_diff'] = abs(df_output['Left-Weight'] - df_output['Right-Distance'])\n    \n    # Determine which side is heavier based on the weight difference\n    df_output['left_heavier'] = (df_output['weight_difference'] > 0).astype(int)\n    \n    # Determine which side is closer to the fulcrum based on the distance ratio\n    df_output['right_heavier'] = (df_output['distance_ratio'] < 1).astype(int)\n    \n    return df_output\n\n", "score": 0.94}